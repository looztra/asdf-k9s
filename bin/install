#!/usr/bin/env bash

set -e
set -o pipefail

current_script_path=${BASH_SOURCE[0]}
plugin_dir=$(dirname "$(dirname "$current_script_path")")

# shellcheck source=SCRIPTDIR/../lib/utils.bash
. "${plugin_dir}/lib/utils.bash"

readonly TOOL_NAME="k9s"

# https://github.com/derailed/k9s/releases/download/v0.16.1/k9s_Linux_x86_64.tar.gz
# https://github.com/derailed/k9s/releases/download/v0.16.1/k9s_Darwin_x86_64.tar.gz
# https://github.com/derailed/k9s/releases/download/v0.16.1/k9s_Darwin_arm64.tar.gz

install_tool() {
  local install_type=$1
  local version=$2
  local install_path=$3
  local tmp_download_dir=$4
  local platform download_url download_target_file download_sub_path_dir

  local bin_install_path="$install_path/bin"
  local full_path_to_binary="$bin_install_path/${TOOL_NAME}"

  if [[ "$install_type" != "version" ]]; then
    fail ERROR "Install of type [$install_type] not supported"
  fi

  platform=$(get_platform)
  download_url=$(k9s_get_download_url "$version" "$platform")
  download_sub_path_dir=$tmp_download_dir/sub
  mkdir -p "$download_sub_path_dir"
  download_target_file="$download_sub_path_dir/${TOOL_NAME}_${platform}.tar.gz"

  log INFO "Downloading [${TOOL_NAME}] from ${download_url} to ${download_target_file}"
  curl --location --output "$download_target_file" "$download_url"

  log INFO "Creating bin directory [${bin_install_path}]"
  mkdir -p "${bin_install_path}"

  log INFO "Cleaning previous binaries if any"
  rm -f "$full_path_to_binary" 2>/dev/null || true

  log INFO "Extracting archive"
  tar xpf "$download_target_file" -C "$tmp_download_dir"

  log INFO "Copying binaries"
  cp "${tmp_download_dir}/${TOOL_NAME}" "${full_path_to_binary}"
  chmod +x "${full_path_to_binary}"
}

#
_tmp_download_dir="$(mktemp -d -t 'asdf_XXXXXXXX')"
trap 'rm -rf "${_tmp_download_dir}"' EXIT
install_tool "$ASDF_INSTALL_TYPE" \
  "$ASDF_INSTALL_VERSION" \
  "$ASDF_INSTALL_PATH" \
  "$_tmp_download_dir"
