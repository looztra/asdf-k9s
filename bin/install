#!/usr/bin/env bash

set -e
set -o pipefail

install_tool() {
  #local install_type=$1
  local version=$2
  local install_path=$3
  local tmp_download_dir=$4
  local binary_name=$5

  local platform
  local bin_install_path="$install_path/bin"
  local binary_path="$bin_install_path/${binary_name}"
  local download_url
  local download_path

  platform=$(get_platform)
  download_url=$(get_download_url "$version" "$platform" "$binary_name")
  download_path="$tmp_download_dir/"$(get_filename "$version" "$platform" "$binary_name")

  echo "Downloading [${binary_name}] from ${download_url} to ${download_path}"
  curl -Lo "$download_path" "$download_url"

  echo "Creating bin directory"
  mkdir -p "${bin_install_path}"

  echo "Cleaning previous binaries"
  rm -f "$binary_path" 2>/dev/null || true

  echo "Extracting archive"
  tar xpf "$download_path" -C "$tmp_download_dir"

  echo "Copying binary"
  cp "$(get_binary_path_in_archive "${tmp_download_dir}" "${binary_name}" "${version}" "${platform}")" "${binary_path}"
  chmod +x "${binary_path}"
}

get_binary_path_in_archive(){
  local archive_dir=$1
  local binary_name=$2
  local version=$3
  local platform=$4

  echo "$archive_dir/$binary_name"
}

get_platform() {
  echo "$(uname)_x86_64"
}

get_filename() {
  local version="$1"
  local platform="$2"
  local binary_name="$3"

  echo "${binary_name}_${version}_${platform}.tar.gz"
}

get_download_url() {
  local version="$1"
  local platform="$2"
  local binary_name="$3"
  local filename
  filename="$(get_filename "$version" "$platform" "$binary_name")"

  echo "https://github.com/derailed/k9s/releases/download/${version}/${filename}"
}

tmp_download_dir="$(mktemp -d -t 'asdf_XXXXXXXX')"
trap 'rm -rf "${tmp_download_dir}"' EXIT
install_tool "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH" "$tmp_download_dir" k9s